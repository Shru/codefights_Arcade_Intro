// Definition for arrays:
// typedef struct arr_##name {
//   int size;
//   type *arr;
// } arr_##name;
//
// arr_##name alloc_arr_##name(int len) {
//   arr_##name a = {len, len > 0 ? malloc(sizeof(type) * len) : NULL};
//   return a;
// }
//
//
bool areSimilar(arr_integer a, arr_integer b) {
    if (a.size != b.size) return false;
    
    int comp1[2];
    int comp2[2];
    
    int i = 0;
    int flag = 0;
    int compliment = 0;
    
    for (i=0; i<a.size; i++){
        if (a.arr[i] != b.arr[i]){
            if (compliment == 0){
                    if(flag == 0) {
                        comp1[0] = a.arr[i];
                        comp1[1] = b.arr[i];
                        flag = 1;
                    }
                    else {
                        comp2[0] = a.arr[i];
                        comp2[1] = b.arr[i];
                        //Check the 2 new arrays for compliments 
                        if ((comp1[0] == comp2[1])&&(comp1[1] == comp2[0])) compliment = 1;
                        else return false;
                    }
            }
            else {
                return false;
            }
        }
    }
    return true;
}
